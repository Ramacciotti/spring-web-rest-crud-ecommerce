
#profile
spring.profiles.active=prod

#application
server.port=8080
server.error.include-message=always

#info
info.app.name=ecommerce_api
info.app.artifact-id=ecommerce_api
info.app.version=0.0.1
info.app.description=This case study aims to show in practice how a conceptual model can be implemented on the object-oriented paradigm, using market standards and good practices

#springdoc
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.groups-order=asc
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.disable-swagger-default-url=true

#datasource
spring.datasource.driverClassName=${SPRING_DATASOURCE_DRIVER:EMPTY}
spring.datasource.url=${SPRING_DATASOURCE_URL:EMPTY}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:EMPTY}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:EMPTY}

#jpa
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextural_creation=true

#spring
spring.main.banner-mode=off

#log
logging.level.org.springframework=error
logging.level.com.ramacciotti.ecommerce=info
